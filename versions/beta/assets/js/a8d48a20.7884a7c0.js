"use strict";(self.webpackChunkmongodb_memory_server_website=self.webpackChunkmongodb_memory_server_website||[]).push([[8061],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(t),c=o,f=u["".concat(s,".").concat(c)]||u[c]||m[c]||i;return t?r.createElement(f,a(a({ref:n},d),{},{components:t})):r.createElement(f,a({ref:n},d))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=c;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},4014:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],l={id:"mongo-memory-binary-opts",title:"MongoBinaryOpts"},s=void 0,p={unversionedId:"api/interfaces/mongo-memory-binary-opts",id:"api/interfaces/mongo-memory-binary-opts",title:"MongoBinaryOpts",description:"API Documentation of MongoBinaryOpts-Interface",source:"@site/../docs/api/interfaces/mongo-binary-opts.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/mongo-memory-binary-opts",permalink:"/mongodb-memory-server/versions/beta/docs/api/interfaces/mongo-memory-binary-opts",draft:!1,editUrl:"https://github.com/nodkz/mongodb-memory-server/edit/master/docs/../docs/api/interfaces/mongo-binary-opts.md",tags:[],version:"current",frontMatter:{id:"mongo-memory-binary-opts",title:"MongoBinaryOpts"},sidebar:"api",previous:{title:"ReplicaMemberConfig",permalink:"/mongodb-memory-server/versions/beta/docs/api/interfaces/mongo-memory-instance-replicamemberconfig"},next:{title:"MongoMemoryReplSetOpts",permalink:"/mongodb-memory-server/versions/beta/docs/api/interfaces/mongo-memory-replset-opts"}},d={},u=[{value:"Values for <code>MongoBinaryOpts</code>",id:"values-for-mongobinaryopts",level:2},{value:"checkMD5",id:"checkmd5",level:3},{value:"Values for <code>BaseDryMongoBinaryOptions</code>",id:"values-for-basedrymongobinaryoptions",level:2},{value:"version",id:"version",level:3},{value:"downloadDir",id:"downloaddir",level:3},{value:"os",id:"os",level:3},{value:"arch",id:"arch",level:3},{value:"platform",id:"platform",level:3},{value:"systemBinary",id:"systembinary",level:3},{value:"Helper Type <code>AnyOS</code>",id:"helper-type-anyos",level:2},{value:"Values for <code>OtherOS</code>",id:"values-for-otheros",level:2},{value:"os",id:"otheros-os",level:3},{value:"Values for <code>LinuxOS</code>",id:"values-for-linuxos",level:2},{value:"os",id:"linuxos-os",level:3},{value:"dist",id:"dist",level:3},{value:"release",id:"release",level:3},{value:"codename",id:"codename",level:3},{value:"id_like",id:"id_like",level:3}],m={toc:u},c="wrapper";function f(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)(c,(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"API Documentation of ",(0,i.kt)("inlineCode",{parentName:"p"},"MongoBinaryOpts"),"-Interface"),(0,i.kt)("h2",{id:"values-for-mongobinaryopts"},"Values for ",(0,i.kt)("inlineCode",{parentName:"h2"},"MongoBinaryOpts")),(0,i.kt)("p",null,"Inherits most values from ",(0,i.kt)("a",{parentName:"p",href:"#values-for-basedrymongobinaryoptions"},(0,i.kt)("inlineCode",{parentName:"a"},"BaseDryMongoBinaryOptions")),"."),(0,i.kt)("h3",{id:"checkmd5"},"checkMD5"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"checkMD5?: boolean")),(0,i.kt)("p",null,"Set wheter to perform a MD5 check on the downloaded archive."),(0,i.kt)("h2",{id:"values-for-basedrymongobinaryoptions"},"Values for ",(0,i.kt)("inlineCode",{parentName:"h2"},"BaseDryMongoBinaryOptions")),(0,i.kt)("h3",{id:"version"},"version"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"version?: string")),(0,i.kt)("p",null,"Set which binary version to download, see ",(0,i.kt)("a",{parentName:"p",href:"/mongodb-memory-server/versions/beta/docs/api/config-options#version"},"config option ",(0,i.kt)("inlineCode",{parentName:"a"},"VERSION"))," for more."),(0,i.kt)("h3",{id:"downloaddir"},"downloadDir"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"downloadDir?: string")),(0,i.kt)("p",null,"Set the directory where binaries will be downloaded to, when a download needs to happen. If a binary is not found in this directory, the other default directories will also be searched."),(0,i.kt)("h3",{id:"os"},"os"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"os?: AnyOS")),(0,i.kt)("p",null,"Set OS information that is necessary for generating the archive name, uses ",(0,i.kt)("a",{parentName:"p",href:"#helper-type-anyos"},(0,i.kt)("inlineCode",{parentName:"a"},"AnyOS")),"."),(0,i.kt)("h3",{id:"arch"},"arch"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"arch?: string")),(0,i.kt)("p",null,"Set which Architecture to use,supports the same values as ",(0,i.kt)("a",{parentName:"p",href:"/mongodb-memory-server/versions/beta/docs/api/config-options#arch"},"config option ",(0,i.kt)("inlineCode",{parentName:"a"},"ARCH")),"."),(0,i.kt)("h3",{id:"platform"},"platform"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"platform?: string")),(0,i.kt)("p",null,"Set which Platform to use,supports the same values as ",(0,i.kt)("a",{parentName:"p",href:"/mongodb-memory-server/versions/beta/docs/api/config-options#platform"},"config option ",(0,i.kt)("inlineCode",{parentName:"a"},"PLATFORM")),"."),(0,i.kt)("h3",{id:"systembinary"},"systemBinary"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"systemBinary?: string")),(0,i.kt)("p",null,"Set the SystemBinary path, if set this path will be used instead of finding a binary.",(0,i.kt)("br",{parentName:"p"}),"\n","If this path does not exist or does not have the required permissions, a error will be thrown instead of downloading."),(0,i.kt)("h2",{id:"helper-type-anyos"},"Helper Type ",(0,i.kt)("inlineCode",{parentName:"h2"},"AnyOS")),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"AnyOS = OtherOS | LinuxOS")),(0,i.kt)("p",null,"Uses either ",(0,i.kt)("a",{parentName:"p",href:"#values-for-otheros"},(0,i.kt)("inlineCode",{parentName:"a"},"OtherOS"))," or ",(0,i.kt)("a",{parentName:"p",href:"#values-for-linuxos"},(0,i.kt)("inlineCode",{parentName:"a"},"LinuxOS")),"."),(0,i.kt)("h2",{id:"values-for-otheros"},"Values for ",(0,i.kt)("inlineCode",{parentName:"h2"},"OtherOS")),(0,i.kt)("h3",{id:"otheros-os"},"os"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"os: 'aix' | 'android' | 'darwin' | 'freebsd' | 'openbsd' | 'sunos' | 'win32' | 'cygwin' | string")),(0,i.kt)("p",null,"Set the Platform the current system is on."),(0,i.kt)("h2",{id:"values-for-linuxos"},"Values for ",(0,i.kt)("inlineCode",{parentName:"h2"},"LinuxOS")),(0,i.kt)("p",null,"Inherits from ",(0,i.kt)("a",{parentName:"p",href:"#values-for-otheros"},(0,i.kt)("inlineCode",{parentName:"a"},"OtherOS")),"."),(0,i.kt)("h3",{id:"linuxos-os"},"os"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"os: 'linux'")),(0,i.kt)("p",null,"Value of the current Platform the system is on. In ",(0,i.kt)("a",{parentName:"p",href:"#values-for-linuxos"},(0,i.kt)("inlineCode",{parentName:"a"},"LinuxOS")),", this value can only be ",(0,i.kt)("inlineCode",{parentName:"p"},"linux"),"."),(0,i.kt)("h3",{id:"dist"},"dist"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"dist: string")),(0,i.kt)("p",null,"Value of the current Distribution the current system is on."),(0,i.kt)("h3",{id:"release"},"release"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"release: string")),(0,i.kt)("p",null,"Value of the current Release the Distribution is on."),(0,i.kt)("h3",{id:"codename"},"codename"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"codename?: string")),(0,i.kt)("p",null,"Value of the codename of the current Distribution Release."),(0,i.kt)("h3",{id:"id_like"},"id_like"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"id_like?: string[]")),(0,i.kt)("p",null,"List of Distributions this Distribution is like."))}f.isMDXComponent=!0}}]);